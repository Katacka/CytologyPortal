@model cytology_portal.Models.CytologyViewModel
@{
    ViewBag.Title = "Home Page";
}
<br /><br />
<div class="container col-md-offset-4">
@using (Html.BeginForm("SaveImage", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="col-md-5">
        <input class="btn btn-primary" type="file" name="file" />
    </div>
    <div class="col-md-2">
        <input class="btn btn-primary" type="submit" value="Upload" />
    </div>
}
</div>
<br /><br /><br />
<div  >
    <div class="col-md-offset-4">
    @using (Html.BeginForm("DisplayThumbnail", "Home"))
    {
        <div class="col-md-offset-1">
        @Html.DropDownListFor(y => y.Filename, Model.ImageNames)
        <input class="btn btn-primary" type="submit" value="Choose" />
        </div>
        <br />
        if (Model.ImagePath != "" && Model.ImagePath != null)
        {
            <img id="thumbnail" src="@Model.ImagePath" alt="Sample Image" width="360px" />
        }
        <br />
    }
    </div>

@using (Html.BeginForm("SegmentImage", "Home"))
{
    @Html.HiddenFor(y => y.Filename)
    <div class="row">
        <div class="col-md-1 col-md-offset-4" >
            <span>X Position</span>
            @Html.TextBoxFor(y => y.X, new { id = "x" , style = "width:50px" })
        </div>
        <div class="col-md-1">
            <span>Y Position</span>
            @Html.TextBoxFor(y => y.Y, new { id = "y", style = "width:50px" })
        </div>
        <div class="col-md-1">
            <span>Height</span>
            @Html.TextBoxFor(y => y.Height, new { id = "h", style = "width:50px" })
        </div>
        <div class="col-md-1">
            <span>Width</span>
            @Html.TextBoxFor(y => y.Width, new { id = "w", style = "width:50px" })
        </div>
        @*<div class="col-md-2">
            <span>Clustering</span>
            @Html.TextBoxFor(y => y.ClusteringThreshold)
        </div>
        <div class="col-md-2">
            <span>Smoothing</span>
            @Html.TextBoxFor(y => y.SmoothingThreshold)
        </div>*@
    </div>
    <br />
    <input class="col-md-offset-5 btn btn-primary" type="submit" value="Segment Image" />
} 
</div>
 

@*@*Histogram*@@*
@if (Model.Histogram != null)
{
    
 <head> 
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
</head>
<body> 
    <div class="col-md-5">
        <h1>Normalized Histogram of Nuclei Sizes</h1>
    </div>
    <div id="myDiv"></div>
    <script>
        var x = [];
        var histogram = @Html.Raw(Json.Encode(Model.Histogram));
        //for (var i = 0; i < 500; i++) {
        //    x[i] = Math.random();
        //}

        var data = [
            {
                x: histogram,
                type: 'histogram',
                histnorm: 'probability',
                marker: {
                    color: 'rgb(255,255,100)',
                },
            }
        ];
        Plotly.newPlot('myDiv', data);
    </script>
</body>
<br />
<div class="col-md-5">
    <h3>Normalized Histogram of Nuclei Sizes</h3>
</div>
    
}*@



@section Scripts {
    @Scripts.Render("~/Scripts/jquery-1.10.2.min.js")
    @Scripts.Render("~/Scripts/jquery.Jcrop.min.js") 
<script language="Javascript">
    jQuery(function($) {
        $('#thumbnail').Jcrop({
            onChange: showCoords,
            onSelect: showCoords
        });
    });

    function showCoords(c) {
        $('#x').val(c.x);
        $('#y').val(c.y);
        $('#x2').val(c.x2);
        $('#y2').val(c.y2);
        $('#w').val(c.w);
        $('#h').val(c.h);
    }; 
</script>
}